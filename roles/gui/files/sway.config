# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
# set $term alacritty
# Your preferred application launcher
set $menu wofi --insensitive --show drun

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
set $wallpaper /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png
output * bg $wallpaper fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
        timeout 900  "swaylock -efFki $wallpaper" \
        timeout 1800  "swaymsg 'output * dpms off'" \
              resume "swaymsg 'output * dpms on'" \
        timeout 7200 "systemctl suspend"

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input type:keyboard xkb_options caps:escape,altwin:prtsc_rwin
input type:touchpad {
  dwt enabled
  middle_emulation enabled
  natural_scroll enabled
  tap enabled
}

### Gaps
gaps inner 20px
smart_gaps on

### Key bindings
#
# Basics:
#
    # start a terminal
    # bindsym $mod+Return exec $term

    # kill focused window
    bindsym $mod+Mod1+q kill

    # start your launcher
    bindsym $mod+Enter exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+Shift+c reload

    # exit sway (logs you out of your wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    # use mpv play url of clipboard
    # bindsym $mod+semicolon exec mpv $(wl-paste)
    # bindsym $mod+equal exec echo "loadfile $(wl-paste) append-play" | socat - /tmp/mpv-socket

    # lockscreen
    bindsym Control+$mod+l exec swaylock -eFki $wallpaper

    # switch application
    bindsym $mod+Space exec swayr switch-window
    # bindsym $mod+t [class="Alacritty"] focus
    bindsym $mod+t [app_id="foot"] focus
    bindsym $mod+a [app_id="pavucontrol"] focus
    bindsym $mod+c [class="Google-chrome"] focus
    bindsym $mod+d [app_id="DBeaver"] focus
    bindsym $mod+f [app_id="firefox"] focus
    bindsym $mod+p [class="Postman"] focus
    bindsym $mod+s [app_id="Slack"] focus

    # take screenshot
    bindsym Control+Mod1+a exec grim -g "$(slurp)" - | wl-copy --type image/png && wl-paste > $(xdg-user-dir PICTURES)/$(date +'%Y%m%d_%H%M%S_grim.png')
    bindsym Control+Mod1+s exec grim -o $(swaymsg -t get_outputs | jq --raw-output '.[] | select(.focused) | .name') - | wl-copy --type image/png && wl-paste > $(xdg-user-dir PICTURES)/$(date +'%Y%m%d_%H%M%S_grim.png')

    # recording
    bindsym Control+Mod1+r exec wf-recorder -o $(swaymsg -t get_outputs | jq --raw-output '.[] | select(.focused) | .name') -c h264_vaapi -d /dev/dri/renderD128 -f $(xdg-user-dir VIDEOS)/$(date +'recording_%Y%m%d_%H%M%S.mp4')
    bindsym Control+Mod1+BackSpace exec killall -s SIGINT wf-recorder

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+Mod1+$left move left
    bindsym $mod+Mod1+$down move down
    bindsym $mod+Mod1+$up move up
    bindsym $mod+Mod1+$right move right
    # ditto, with arrow keys
    bindsym $mod+Mod1+Left move left
    bindsym $mod+Mod1+Down move down
    bindsym $mod+Mod1+Up move up
    bindsym $mod+Mod1+Right move right
#
# Workspaces:
#
    # switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    bindsym $mod+Shift+$down workspace prev_on_output
    bindsym $mod+Shift+$up workspace next_on_output
    bindsym $mod+Backslash workspace back_and_forth
    # move focused container to workspace
    bindsym $mod+Mod1+1 move container to workspace 1; workspace 1
    bindsym $mod+Mod1+2 move container to workspace 2; workspace 2
    bindsym $mod+Mod1+3 move container to workspace 3; workspace 3
    bindsym $mod+Mod1+4 move container to workspace 4; workspace 4
    bindsym $mod+Mod1+5 move container to workspace 5; workspace 5
    bindsym $mod+Mod1+6 move container to workspace 6; workspace 6
    bindsym $mod+Mod1+7 move container to workspace 7; workspace 7
    bindsym $mod+Mod1+8 move container to workspace 8; workspace 8
    bindsym $mod+Mod1+9 move container to workspace 9; workspace 9
    bindsym $mod+Mod1+0 move container to workspace 10; workspace 10
    bindsym $mod+Mod1+Shift+$down move container to workspace prev_on_output; workspace prev_on_output
    bindsym $mod+Mod1+Shift+$up move container to workspace next_on_output; workspace next_on_output
    bindsym $mod+Mod1+Backslash move container to workspace back_and_forth; workspace back_and_forth
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # move workspace
    bindsym Control+$mod+Mod1+$left move workspace to output left
    bindsym Control+$mod+Mod1+$down move workspace to output down
    bindsym Control+$mod+Mod1+$up move workspace to output up
    bindsym Control+$mod+Mod1+$right move workspace to output right
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+v or $mod+s, for horizontal and vertical splits
    # respectively.
    bindsym Control+$mod+v splith
    bindsym Control+$mod+s splitv

    # Switch the current container between different layout styles
    bindsym Control+$mod+w layout stacking
    bindsym Control+$mod+t layout tabbed
    bindsym Control+$mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym Control+$mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Mod1+m floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym Control+$mod+m focus mode_toggle

    # move focus to the parent container
    bindsym Control+$mod+a focus parent
#
# Hot keys
#
    bindsym XF86AudioRaiseVolume    exec --no-startup-id    pactl set-sink-volume 0 +5%
    bindsym XF86AudioLowerVolume    exec --no-startup-id    pactl set-sink-volume 0 -5%
    bindsym XF86AudioMute           exec --no-startup-id    pactl set-sink-mute 0 toggle
    bindsym XF86MonBrightnessDown   exec --no-startup-id    light -U 10
    bindsym XF86MonBrightnessUp     exec --no-startup-id    light -A 10
    bindsym XF86Sleep               exec                    systemctl suspend
    bindsym XF86AudioPlay           exec                    playerctl play-pause
    bindsym XF86AudioStop           exec                    playerctl stop
    bindsym XF86AudioPrev           exec                    playerctl previous
    bindsym XF86AudioNext           exec                    playerctl next
#
# Run commands when window matches criteria
# swaymsg -t get_tree | rg app_id
#
    for_window [app_id="pavucontrol"] floating enable
    for_window [class="fcitx5-config-qt"] floating enable
    for_window [app_id="firefox" title="Picture-in-Picture"] floating enable
    # File upload etc.
    for_window [app_id="xdg-desktop-portal-gtk"] floating enable
    for_window [app_id="firefox"] inhibit_idle fullscreen
    for_window [class="Google-chrome"] inhibit_idle fullscreen
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Mod1+Semicolon move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+Semicolon scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10 px or 10 ppt
    bindsym $down resize grow height 10 px or 10 ppt
    bindsym $up resize shrink height 10 px or 10 ppt
    bindsym $right resize grow width 10 px or 10 ppt

    # ditto, with arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym Control+$mod+r mode "resize"

#
# Logout, Reboot, Halt bindings
#
mode "(L)ogout, (R)eboot, (H)alt" {
    bindsym l exit
    bindsym r exec systemctl reboot
    bindsym h exec systemctl poweroff

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym Control+Mod1+Delete mode "(L)ogout, (R)eboot, (H)alt"

#
# Autostart
#
    # kanshi
    exec_always pkill kanshi; exec kanshi
    # udiskie
    exec udiskie --tray
    # fcitx5
    exec fcitx5 -d
    # notification
    exec mako
    # swayr
    exec swayrd
    # foot
    exec foot --server

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    font pango:DejaVu Sans Mono, Font Awesome 6 Free
    position top
    status_command i3status-rs ~/.config/i3status-rs/config.toml
    colors {
      separator #666666
      background #222222
      statusline #dddddd
      focused_workspace #0088CC #0088CC #ffffff
      active_workspace #333333 #333333 #ffffff
      inactive_workspace #333333 #333333 #888888
      urgent_workspace #2f343a #900000 #ffffff
    }
}

include /etc/sway/config.d/*
